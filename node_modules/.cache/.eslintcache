[{"/Users/amber/Front-End-Class-Batch19/stylish/src/index.js":"1","/Users/amber/Front-End-Class-Batch19/stylish/src/App.js":"2","/Users/amber/Front-End-Class-Batch19/stylish/src/components/Footer.js":"3","/Users/amber/Front-End-Class-Batch19/stylish/src/components/Header.js":"4","/Users/amber/Front-End-Class-Batch19/stylish/src/components/Product.js":"5","/Users/amber/Front-End-Class-Batch19/stylish/src/components/Checkout.js":"6","/Users/amber/STYLISH/src/index.js":"7","/Users/amber/STYLISH/src/App.js":"8","/Users/amber/STYLISH/src/components/Product.js":"9","/Users/amber/STYLISH/src/components/Footer.js":"10","/Users/amber/STYLISH/src/components/Checkout.js":"11","/Users/amber/STYLISH/src/components/Header.js":"12"},{"size":379,"mtime":1677919383148,"results":"13","hashOfConfig":"14"},{"size":1535,"mtime":1678204570390,"results":"15","hashOfConfig":"14"},{"size":2042,"mtime":1678204570391,"results":"16","hashOfConfig":"14"},{"size":3762,"mtime":1678204570391,"results":"17","hashOfConfig":"14"},{"size":8512,"mtime":1678204570392,"results":"18","hashOfConfig":"14"},{"size":11966,"mtime":1678255876944,"results":"19","hashOfConfig":"14"},{"size":379,"mtime":1677919383148,"results":"20","hashOfConfig":"21"},{"size":1535,"mtime":1678204570390,"results":"22","hashOfConfig":"21"},{"size":8512,"mtime":1678204570392,"results":"23","hashOfConfig":"21"},{"size":2042,"mtime":1678204570391,"results":"24","hashOfConfig":"21"},{"size":11966,"mtime":1678255876944,"results":"25","hashOfConfig":"21"},{"size":3762,"mtime":1678204570391,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kng781",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aq5g0f",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amber/Front-End-Class-Batch19/stylish/src/index.js",[],[],"/Users/amber/Front-End-Class-Batch19/stylish/src/App.js",[],[],"/Users/amber/Front-End-Class-Batch19/stylish/src/components/Footer.js",[],["65","66","67","68","69","70","71","72","73"],"/Users/amber/Front-End-Class-Batch19/stylish/src/components/Header.js",[],["74"],"/Users/amber/Front-End-Class-Batch19/stylish/src/components/Product.js",["75"],[],"import React, { useState, useEffect } from \"react\";\n\nfunction Product({ setTotalProduct }) {\n  const urlParams = new URLSearchParams(window.location.search);\n  const id = urlParams.get(\"id\");\n  const productUrl = `https://api.appworks-school.tw/api/1.0/products/details?id=${id}`;\n  const [posts, setPosts] = useState();\n  const [selectedColor, setSelectedColor] = useState(null);\n  const [selectedSize, setSelectedSize] = useState(null);\n  const [selectedQuantity, setSelectedQuantity] = useState(0);\n  const localStorageStock = JSON.parse(localStorage.getItem(\"cart\")) || [];\n  // console.log(\"localStorageStock\",localStorageStock);\n  const maxStock =\n    selectedColor?.code && selectedSize\n      ? posts.data.variants.find(\n          (variant) =>\n            variant.color_code === selectedColor.code &&\n            variant.size === selectedSize\n        )?.stock\n      : 0;\n\n  //console.log({ maxStock, selectedColor, selectedSize, selectedQuantity });\n\n  function handleColorClick(selectedColor) {\n    setSelectedColor(selectedColor);\n  }\n\n  function handleSizeClick(selectedSize) {\n    setSelectedSize(selectedSize);\n  }\n\n  function handleQuantityClick(plusOrMinus, maxStock) {\n    maxStock = Number(maxStock);\n    if (plusOrMinus === \"plus\" && selectedQuantity < (maxStock || 0)) {\n      setSelectedQuantity(selectedQuantity + 1);\n    } else if (plusOrMinus === \"minus\" && selectedQuantity > 0) {\n      setSelectedQuantity(selectedQuantity - 1);\n    }\n  }\n\n  function handleAddtoCart() {\n    if (\n      selectedColor !== undefined &&\n      selectedSize !== null &&\n      selectedQuantity !== 0\n    ) {\n      //console.log(\"按下加入購物車\");\n      const item = {\n        id: posts.data.id,\n        img: posts.data.main_image,\n        name: posts.data.title,\n        price: posts.data.price,\n        color: selectedColor,\n        size: selectedSize,\n        qty: selectedQuantity,\n      };\n      //console.log(\"item:\",item);\n\n      const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n\n      const cartItemIndex = cart.findIndex(\n        (cartItem) =>\n          cartItem.id === item.id &&\n          cartItem.color.code === item.color.code &&\n          cartItem.size === item.size\n      );\n\n      let updatedCart;\n      if (cartItemIndex === -1) {\n        updatedCart = [...cart, item];\n      } else {\n        updatedCart = [...cart];\n        updatedCart[cartItemIndex].qty += item.qty;\n      }\n\n      localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n\n      const totalQuantity = updatedCart.reduce((total, i) => total + i.qty, 0);\n      setTotalProduct(totalQuantity);\n\n      const newPosts = { ...posts };\n      const variantIndex = newPosts.data.variants.findIndex(\n        (variant) =>\n          variant.color_code === selectedColor.code &&\n          variant.size === selectedSize\n      );\n      if (variantIndex !== -1) {\n        newPosts.data.variants[variantIndex].stock -= selectedQuantity;\n        // setMaxStock(newPosts.data.variants[variantIndex].stock);\n      }\n      setPosts(newPosts);\n    }\n    setSelectedColor(null);\n    setSelectedSize(null);\n    setSelectedQuantity(0);\n  }\n\n  useEffect(() => {\n    fetch(productUrl)\n      .then((response) => response.json())\n      .then((response) => {\n        //console.log(\"response.data.vatriants\",response.data.variants);\n        const updatedVariants = response.data.variants.map(function (variant) {\n          const itemFromLocalstorage = localStorageStock.find(\n            (stock) =>\n              stock.color.code === variant.color_code &&\n              stock.size === variant.size\n          );\n\n          if (itemFromLocalstorage) {\n            let updatedStock = variant.stock - itemFromLocalstorage.qty;\n            return {\n              ...variant,\n              stock: updatedStock,\n            };\n          } else {\n            return variant;\n          }\n        });\n\n        const updatedPosts = {\n          data: {\n            ...response.data,\n            variants: updatedVariants,\n          },\n        };\n\n        //console.log({ updatedPosts })\n\n        setPosts(updatedPosts);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }, []);\n\n  if (posts === undefined) {\n    return null;\n  }\n\n  return (\n    <section className=\"product\">\n      <section className=\"product-top\">\n        <img\n          className=\"product-image-top\"\n          src={posts.data.main_image}\n          alt=\"product\"\n        />\n        <div className=\"product-info\">\n          <ul>\n            <li className=\"product-name\">{posts.data.title}</li>\n            <li className=\"product-id\">{posts.data.id}</li>\n            <li className=\"product-price\">TWD.{posts.data.price}</li>\n            <li className=\"split1\"></li>\n            <li>\n              <ul className=\"product-color\">\n                <p>顏色｜</p>\n                {posts.data.colors.map((color, index) => (\n                  <li\n                    key={index}\n                    className={`colorblock ${\n                      selectedColor === color ? \"active\" : \"\"\n                    }`}\n                    style={{ backgroundColor: \"#\" + color.code }}\n                    onClick={() => handleColorClick(color)}\n                  ></li>\n                ))}\n              </ul>\n            </li>\n            <li>\n              <ul className=\"product-size\">\n                <p>尺寸｜</p>\n                {posts.data.sizes.map((size, index) => (\n                  <li\n                    key={index}\n                    className={`size ${\n                      selectedColor &&\n                      posts.data.variants.find(\n                        (variant) =>\n                          variant.color_code === selectedColor.code &&\n                          variant.size === size\n                      ).stock > 0\n                        ? \"\"\n                        : \"out-of-stock\"\n                    } ${selectedSize === size ? \"active\" : \"\"}`}\n                    onClick={() => {\n                      handleSizeClick(size);\n                      setSelectedQuantity(0);\n                    }}\n                  >\n                    {size}\n                  </li>\n                ))}\n              </ul>\n            </li>\n            <li>\n              <ul className=\"product-in-stock\">\n                <p>數量｜</p>\n                <div className=\"quantity-container\">\n                  <div\n                    className=\"minus\"\n                    type=\"button\"\n                    onClick={() => handleQuantityClick(\"minus\")}\n                  >\n                    -\n                  </div>\n                  <div className=\"quantity\">{selectedQuantity}</div>\n                  <div\n                    className=\"plus\"\n                    type=\"button\"\n                    onClick={() => handleQuantityClick(\"plus\", maxStock)}\n                  >\n                    +\n                  </div>\n                </div>\n              </ul>\n            </li>\n            <button\n              className=\"add-to-cart\"\n              onClick={handleAddtoCart}\n              style={{\n                cursor:\n                  selectedColor === undefined ||\n                  selectedSize === null ||\n                  selectedQuantity === 0\n                    ? \"not-allowed\"\n                    : \"pointer\",\n              }}\n            >\n              加入購物車\n            </button>\n            <div className=\"product-detail\">\n              {posts.data.note}\n              <br />\n              <br />\n              {posts.data.texture}\n              <br />\n              {posts.data.description.split(\"\\r\\n\")[0]}\n              <br />\n              {posts.data.description.split(\"\\r\\n\")[1]}\n              <br />\n              <br />\n              清洗：{posts.data.wash}\n              <br />\n              產地：{posts.data.place}\n            </div>\n          </ul>\n        </div>\n      </section>\n\n      <section className=\"product-bottom\">\n        <div className=\"more-info\">\n          <p className=\"more-info-p\">更多產品資訊</p>\n          <div className=\"split2\"></div>\n        </div>\n        <p className=\"description\">{posts.data.story}</p>\n        <div className=\"product-images-bottom\">\n          {posts.data.images.map((image, index) => (\n            <img\n              key={index}\n              className=\"product-image-bottom\"\n              src={image}\n              alt=\"product\"\n            />\n          ))}\n        </div>\n      </section>\n    </section>\n  );\n}\n\nexport default Product;\n","/Users/amber/Front-End-Class-Batch19/stylish/src/components/Checkout.js",["76"],[],"import React, { useState, useEffect } from \"react\";\nimport Trashcan from \"../img/cart-remove.png\";\nimport { Link } from \"react-router-dom\";\n\nfunction Checkout({ setTotalProduct }) {\n  const deliveryFee = 30;\n  const [cartData, setCartData] = useState(\n    JSON.parse(localStorage.getItem(\"cart\")) || []\n  );\n  const [form, setForm] = useState({\n    name: \"\",\n    phone: \"\",\n    address: \"\",\n    email: \"\",\n    time: \"\",\n    cardNumber: \"\",\n    expirationDate: \"\",\n    securityCode: \"\",\n  });\n\n  // console.log(form);\n  const handleDelete = (index) => {\n    const newCartData = [...cartData];\n    const product = newCartData[index];\n    newCartData.splice(index, 1);\n    setCartData(newCartData);\n    localStorage.setItem(\"cart\", JSON.stringify(newCartData));\n    alert(`${product.name} 刪除成功`);\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    const num = cartData.reduce((acc, product) => acc + product.qty, 0);\n    setTotalProduct(num);\n  }, [cartData]);\n\n  return (\n    <section className=\"checkout\">\n      <div className=\"shopping-cart-list\">\n        <div className=\"shopping-cart-title\">購物車</div>\n        <div className=\"shopping-cart-list-qty\">數量</div>\n        <div className=\"shopping-cart-list-price\">單價</div>\n        <div className=\"shopping-cart-list-total\">小計</div>\n      </div>\n\n      <section className=\"shopping-cart-container\">\n        {cartData.map((product, index) => {\n          return (\n            <section className=\"product-detail-each\" key={index}>\n              <section className=\"product-detail-each-right\">\n                <Link to={`/?id=${product.id}`}>\n                  <img\n                    className=\"product-detail-image\"\n                    src={product.img}\n                    alt=\"product\"\n                  />\n                </Link>\n                <section className=\"product-detail-info\">\n                  <div className=\"product-detail-name\">{product.name}</div>\n                  <div className=\"product-detail-id\">{product.id}</div>\n                  <div className=\"product-detail-color\">\n                    顏色｜{product.color.name}\n                  </div>\n                  <div className=\"product-detail-size\">\n                    尺寸｜{product.size}\n                  </div>\n                </section>\n              </section>\n              <section className=\"product-detail-each-left\">\n                <section className=\"product-detail-list\">\n                  <div className=\"product-detail-list-qty\">數量</div>\n                  <div className=\"product-detail-list-price\">單價</div>\n                  <div className=\"product-detail-list-total\">小計</div>\n                </section>\n\n                <section className=\"product-detail-fact\">\n                  <div className=\"product-detail-qty-container\">\n                    <select\n                      className=\"product-detail-qty\"\n                      value={product.qty}\n                      onChange={(e) => {\n                        const newCartData = [...cartData];\n                        newCartData[index].qty = parseInt(e.target.value);\n                        setCartData(newCartData);\n                        localStorage.setItem(\n                          \"cart\",\n                          JSON.stringify(newCartData)\n                        );\n                      }}\n                    >\n                      {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((qty) => (\n                        <option key={qty} value={qty}>\n                          {qty}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div className=\"product-detail-price\">\n                    TWD.{product.price}\n                  </div>\n                  <div className=\"product-detail-total\">\n                    TWD.{product.price * product.qty}\n                  </div>\n                </section>\n                <img\n                  className=\"product-detail-delete\"\n                  src={Trashcan}\n                  alt=\"delete\"\n                  onClick={handleDelete}\n                />\n              </section>\n            </section>\n          );\n        })}\n      </section>\n\n      <form className=\"order-detail-container\">\n        <div className=\"order-detail-title\">訂購資料</div>\n        <div className=\"order-detail-split\"></div>\n\n        <fieldset className=\"order-name\">\n          <legend className=\"order-name-p\">收件人姓名</legend>\n          <input\n            id=\"name\"\n            name=\"name\"\n            className=\"order-name-input\"\n            type=\"text\"\n            value={form.name}\n            onChange={(e) =>\n              setForm({\n                ...form,\n                name: e.target.value,\n              })\n            }\n            required\n          />\n          <p className=\"order-name-reminder-p\">\n            務必填寫完整收件人姓名，避免包裹無法順利簽收\n          </p>\n        </fieldset>\n\n        <fieldset className=\"order-phone\">\n          <legend className=\"order-phone-p\">手機</legend>\n          <input\n            className=\"order-phone-input\"\n            type=\"text\"\n            id=\"phone\"\n            name=\"phone\"\n            value={form.phone}\n            onChange={(e) => {\n              setForm({\n                ...form,\n                phone: e.target.value,\n              });\n            }}\n            required\n          />\n        </fieldset>\n\n        <fieldset className=\"order-address\">\n          <legend className=\"order-address-p\">地址</legend>\n          <input\n            className=\"order-address-input\"\n            type=\"text\"\n            id=\"address\"\n            name=\"address\"\n            value={form.address}\n            onChange={(e) => {\n              setForm({\n                ...form,\n                address: e.target.value,\n              });\n            }}\n            required\n          />\n        </fieldset>\n\n        <fieldset className=\"order-Email-address\">\n          <legend className=\"order-Email-address-p\">Email</legend>\n          <input\n            className=\"order-Email-address-input\"\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={form.email}\n            onChange={(e) => {\n              setForm({\n                ...form,\n                email: e.target.value,\n              });\n            }}\n            required\n          />\n        </fieldset>\n\n        <fieldset className=\"order-transport-time\">\n          <legend className=\"order-transport-time-p\">配送時間</legend>\n          <div className=\"radio-input\">\n            <input\n              type=\"radio\"\n              id=\"morning\"\n              name=\"time\"\n              value=\"08:00-12:00\"\n              checked={form.time === \"08:00-12:00\"}\n              onChange={(e) => {\n                setForm({\n                  ...form,\n                  time: e.target.value,\n                });\n              }}\n              required\n            />\n            <label htmlFor=\"morning\">08:00-12:00</label>\n            <input\n              type=\"radio\"\n              id=\"afternoon\"\n              name=\"time\"\n              value=\"14:00-18:00\"\n            />\n            <label\n              htmlFor=\"afternoon\"\n              checked={form.time === \"14:00-18:00\"}\n              onChange={(e) => {\n                setForm({\n                  ...form,\n                  time: e.target.value,\n                });\n              }}\n              required\n            >\n              14:00-18:00\n            </label>\n            <input\n              type=\"radio\"\n              id=\"none\"\n              name=\"time\"\n              value=\"不指定\"\n              checked={form.time === \"不指定\"}\n              onChange={(e) => {\n                setForm({\n                  ...form,\n                  time: e.target.value,\n                });\n              }}\n              required\n            />\n            <label htmlFor=\"none\">不指定</label>\n          </div>\n        </fieldset>\n      </form>\n\n      <section className=\"payment-detail-container\">\n        <div className=\"payment-detail-title\">付款資料</div>\n        <div className=\"payment-detail-split\"></div>\n\n        <form className=\"payment-detail\">\n          <fieldset className=\"payment-card-no\">\n            <legend className=\"payment-card-no-p\">信用卡號碼</legend>\n            <input\n              className=\"payment-card-no-input\"\n              type=\"text\"\n              id=\"cardNumber\"\n              name=\"cardNumber\"\n              placeholder=\"**** **** **** ****\"\n              value={form.cardNumber}\n              onChange={(e) => {\n                setForm({\n                  ...form,\n                  cardNumber: e.target.value,\n                });\n              }}\n              required\n            />\n          </fieldset>\n\n          <fieldset className=\"payment-card-expirationDate\">\n            <legend className=\"payment-card-expirationDate-p\">有效期限</legend>\n            <input\n              className=\"payment-card-expirationDate-input\"\n              placeholder=\"MM / YY\"\n              type=\"text\"\n              id=\"expirationDate\"\n              name=\"expirationDate\"\n              value={form.expirationDate}\n              onChange={(e) => {\n                setForm({\n                  ...form,\n                  expirationDate: e.target.value,\n                });\n              }}\n              required\n            />\n          </fieldset>\n\n          <fieldset className=\"payment-card-securitycode\">\n            <legend className=\"payment-card-securitycode-p\">安全碼</legend>\n            <input\n              className=\"payment-card-securitycode-input\"\n              placeholder=\"後三碼\"\n              type=\"text\"\n              id=\"securityCode\"\n              name=\"securityCode\"\n              value={form.securityCode}\n              onChange={(e) => {\n                setForm({\n                  ...form,\n                  securityCode: e.target.value,\n                });\n              }}\n              required\n            />\n          </fieldset>\n        </form>\n      </section>\n\n      <section className=\"confirm-payment-container\">\n        <section className=\"confirm-payment-total\">\n          <p className=\"confirm-payment-p\">總金額</p>\n          <div className=\"currancy\">NT.</div>\n          <div className=\"confirm-payment-total-num\">\n            {cartData.reduce(\n              (acc, product) => acc + product.price * product.qty,\n              0\n            )}\n          </div>\n        </section>\n\n        <section className=\"confirm-payment-delivery-fee\">\n          <p className=\"confirm-payment-delivery-p\">運費</p>\n          <div className=\"currancy\">NT.</div>\n          <div className=\"confirm-payment-delivery-fee-num\">\n            {cartData.length === 0 ? \"0\" : deliveryFee}\n          </div>\n        </section>\n\n        <div className=\"confirm-payment-split\"></div>\n\n        <section className=\"confirm-payment-price\">\n          <p className=\"confirm-payment-price-p\">應付金額</p>\n          <div className=\"currancy\">NT.</div>\n          <div className=\"confirm-payment-price-num\">\n            {cartData.reduce(\n              (acc, product) => acc + product.price * product.qty,\n              0\n            ) + (cartData.length === 0 ? 0 : deliveryFee)}\n          </div>\n        </section>\n\n        <button\n          className=\"confirm-payment-btn\"\n          disabled={cartData.length === 0}\n          onClick={() =>\n            alert(\n              `【請再次確認您的收件資訊】\\n 收件人姓名：${form.name} \\n 手機：${form.phone} \\n 地址：${form.address} \\n Email:${form.email} \\n 配送時間：${form.time} \\n 信用卡號碼：${form.cardNumber} \\n 有效期限：${form.expirationDate} \\n 安全碼：${form.securityCode}`\n            )\n          }\n        >\n          確認付款\n        </button>\n      </section>\n    </section>\n  );\n}\n\nexport default Checkout;\n","/Users/amber/STYLISH/src/index.js",[],[],"/Users/amber/STYLISH/src/App.js",[],[],"/Users/amber/STYLISH/src/components/Product.js",["77"],[],"/Users/amber/STYLISH/src/components/Footer.js",[],["78","79","80","81","82","83","84","85","86"],"/Users/amber/STYLISH/src/components/Checkout.js",["87"],[],"/Users/amber/STYLISH/src/components/Header.js",[],["88"],{"ruleId":"89","severity":1,"message":"90","line":15,"column":11,"nodeType":"91","endLine":15,"endColumn":40,"suppressions":"92"},{"ruleId":"89","severity":1,"message":"90","line":16,"column":11,"nodeType":"91","endLine":16,"endColumn":44,"suppressions":"93"},{"ruleId":"89","severity":1,"message":"90","line":17,"column":11,"nodeType":"91","endLine":17,"endColumn":44,"suppressions":"94"},{"ruleId":"89","severity":1,"message":"90","line":18,"column":11,"nodeType":"91","endLine":18,"endColumn":42,"suppressions":"95"},{"ruleId":"89","severity":1,"message":"90","line":19,"column":11,"nodeType":"91","endLine":19,"endColumn":30,"suppressions":"96"},{"ruleId":"89","severity":1,"message":"90","line":22,"column":11,"nodeType":"91","endLine":22,"endColumn":31,"suppressions":"97"},{"ruleId":"89","severity":1,"message":"90","line":25,"column":11,"nodeType":"91","endLine":25,"endColumn":34,"suppressions":"98"},{"ruleId":"89","severity":1,"message":"90","line":28,"column":11,"nodeType":"91","endLine":28,"endColumn":35,"suppressions":"99"},{"ruleId":"89","severity":1,"message":"90","line":55,"column":11,"nodeType":"91","endLine":55,"endColumn":14,"suppressions":"100"},{"ruleId":"89","severity":1,"message":"90","line":124,"column":13,"nodeType":"91","endLine":124,"endColumn":16,"suppressions":"101"},{"ruleId":"102","severity":1,"message":"103","line":135,"column":6,"nodeType":"104","endLine":135,"endColumn":8,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":35,"column":6,"nodeType":"104","endLine":35,"endColumn":16,"suggestions":"107"},{"ruleId":"102","severity":1,"message":"103","line":135,"column":6,"nodeType":"104","endLine":135,"endColumn":8,"suggestions":"108"},{"ruleId":"89","severity":1,"message":"90","line":15,"column":11,"nodeType":"91","endLine":15,"endColumn":40,"suppressions":"109"},{"ruleId":"89","severity":1,"message":"90","line":16,"column":11,"nodeType":"91","endLine":16,"endColumn":44,"suppressions":"110"},{"ruleId":"89","severity":1,"message":"90","line":17,"column":11,"nodeType":"91","endLine":17,"endColumn":44,"suppressions":"111"},{"ruleId":"89","severity":1,"message":"90","line":18,"column":11,"nodeType":"91","endLine":18,"endColumn":42,"suppressions":"112"},{"ruleId":"89","severity":1,"message":"90","line":19,"column":11,"nodeType":"91","endLine":19,"endColumn":30,"suppressions":"113"},{"ruleId":"89","severity":1,"message":"90","line":22,"column":11,"nodeType":"91","endLine":22,"endColumn":31,"suppressions":"114"},{"ruleId":"89","severity":1,"message":"90","line":25,"column":11,"nodeType":"91","endLine":25,"endColumn":34,"suppressions":"115"},{"ruleId":"89","severity":1,"message":"90","line":28,"column":11,"nodeType":"91","endLine":28,"endColumn":35,"suppressions":"116"},{"ruleId":"89","severity":1,"message":"90","line":55,"column":11,"nodeType":"91","endLine":55,"endColumn":14,"suppressions":"117"},{"ruleId":"102","severity":1,"message":"106","line":35,"column":6,"nodeType":"104","endLine":35,"endColumn":16,"suggestions":"118"},{"ruleId":"89","severity":1,"message":"90","line":124,"column":13,"nodeType":"91","endLine":124,"endColumn":16,"suppressions":"119"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["120"],["121"],["122"],["123"],["124"],["125"],["126"],["127"],["128"],["129"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'localStorageStock' and 'productUrl'. Either include them or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has a missing dependency: 'setTotalProduct'. Either include it or remove the dependency array. If 'setTotalProduct' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["131"],["132"],["133"],["134"],["135"],["136"],["137"],["138"],["139"],["140"],["141"],["142"],["143"],{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"146","fix":"150"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"kind":"144","justification":"145"},{"desc":"148","fix":"151"},{"kind":"144","justification":"145"},"directive","","Update the dependencies array to be: [localStorageStock, productUrl]",{"range":"152","text":"153"},"Update the dependencies array to be: [cartData, setTotalProduct]",{"range":"154","text":"155"},{"range":"156","text":"153"},{"range":"157","text":"155"},[4153,4155],"[localStorageStock, productUrl]",[954,964],"[cartData, setTotalProduct]",[4153,4155],[954,964]]